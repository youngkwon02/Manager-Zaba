/*****************************************************************************************/
Project_Unknown.

index.php에서 sign-in이나 main등의 page로 redirection
Member info에 대한 class : userDAO
TODO info에 대한 class: todoDAO
Memo info에 대한 class: memoDAO
Calendar info에 대한 class: calendarDAO
Relation Manage에 대한 class: relationDAO

Sign in과 Sign up에 대한 Action은 각각 SigninAction.php와 SignupAction.php

DATABASE
    username : PUadmin
    dbname : Project_Unknown
    tablename : user_info( user_seq, user_email, user_passwd, user_name, user_birth )
                TODO( TODO_seq, user_email, user_name, TODO_content, date )
                MEMO( MEMO_seq, user_email, user_name, title, text, Last_Modified )
                CALENDAR( CAL_seq, title, owner, start_date, end_date, record_date, share_YN, color )
                relation( relation_seq, first_user_email, second_user_email, since )

Calendar
    $numOfDay, $prevNumOfDay, $nextNumOfDay, $startDayNum 등으로 달력 구성.
    추가적으로 PHP 기본 제공 함수를 통해 $now_M과 $now_Y를 구해서 달력 생성.

    이제 home에서 Calendar widget을 볼 때, 연도와 월에따른 달력의 변화가 필요.
    home.js의 JS function과 calendarAction.php, initCalendar.php에서 날짜 이동 처리 완료.
    
Relation
    친구 관계는 Friend Management에서 관리.
    기능은 Search bar에서 user_name(NOT NULL) search, using Ajax, express that user.
    차선책으로 Form으로 처리하는 방법이 있지만, 원하는 바는 Ajax이 맞는거같다.
    calendar_filter라는 일정 보임 filter column이 존재한다.
    값은 N, Y, F, S가 존재하며, 서로가 보이지 않게 하면 Y, 서로가 보이게 하면 N,
    first_usre_email에 해당하는 사람이 second_user_email에 해당하는 사람의 일정을 보지 않기를 원한다면 F,
    반대의 경우 S이다.
    이를 통해서 calendarFilter column을 하나만 만들어서 작동하게 할 수 있었다.